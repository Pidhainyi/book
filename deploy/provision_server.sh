#!/bin/bash

# ===========================
# Symfony provisioning script
# ===========================

PROJECT_NAME="posts"
PROJECT_DIR="/var/www/html/$PROJECT_NAME"
DB_NAME="symfony_db"
DB_USER="symfony_user"
DB_PASS="symfony_pass"
PHP_VERSION="8.2"
NGINX_CONF_SRC="./nginx_posts.conf"  # —Ñ–∞–π–ª –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –ø–æ—Ä—É—á –∑—ñ —Å–∫—Ä–∏–ø—Ç–æ–º
DOMAIN="andriipidhainyi.site"
EMAIL="andriipidhainyi@gmail.com"       # –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π email –¥–ª—è Certbot


echo "üöÄ Starting Symfony provisioning..."

# 1Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
sudo apt update && sudo apt upgrade -y

# 2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
sudo apt install -y git unzip curl wget software-properties-common

# 3Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PHP –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
sudo add-apt-repository ppa:ondrej/php -y
sudo apt update
sudo apt install -y php$PHP_VERSION php$PHP_VERSION-cli php$PHP_VERSION-mbstring php$PHP_VERSION-xml php$PHP_VERSION-curl php$PHP_VERSION-intl php$PHP_VERSION-zip php$PHP_VERSION-sqlite3 php$PHP_VERSION-mysql php$PHP_VERSION-gd php$PHP_VERSION-bcmath php$PHP_VERSION-fpm

# 4Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Composer
EXPECTED_SIGNATURE=$(wget -q -O - https://composer.github.io/installer.sig)
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_SIGNATURE=$(php -r "echo hash_file('sha384', 'composer-setup.php');")
if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]; then
    >&2 echo 'ERROR: Invalid Composer installer signature'
    rm composer-setup.php
    exit 1
fi
sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer
rm composer-setup.php
composer -V
echo "‚úÖ Composer installed successfully"

# 5Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nginx
sudo apt install -y nginx
sudo systemctl enable nginx
sudo systemctl start nginx

# 6Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ MySQL
sudo apt install -y mysql-server
sudo systemctl enable mysql
sudo systemctl start mysql

# 7Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"
sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"
sudo mysql -e "FLUSH PRIVILEGES;"
echo "‚úÖ MySQL database and user created"

# 8Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
sudo mkdir -p $PROJECT_DIR
sudo chown -R $USER:www-data $PROJECT_DIR
sudo chmod -R 775 $PROJECT_DIR

# 9Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Ö–æ—Å—Ç–∞ Nginx –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ —Ñ–∞–π–ª–∞
NGINX_CONF_DEST="/etc/nginx/sites-available/$PROJECT_NAME"
sudo cp $NGINX_CONF_SRC $NGINX_CONF_DEST
sudo ln -sf $NGINX_CONF_DEST /etc/nginx/sites-enabled/
sudo nginx -t && sudo systemctl reload nginx
echo "‚úÖ Nginx virtual host configured for $DOMAIN and 217.24.174.16"

# üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS —á–µ—Ä–µ–∑ Certbot
sudo apt install -y certbot python3-certbot-nginx
sudo certbot --nginx -d $DOMAIN --non-interactive --agree-tos -m $EMAIL

# 10Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ PHP-FPM
sudo systemctl enable php$PHP_VERSION-fpm
sudo systemctl restart php$PHP_VERSION-fpm

echo "‚úÖ Provisioning finished! Server is ready for Symfony with HTTPS."
echo "Project directory: $PROJECT_DIR"
echo "Database: $DB_NAME, User: $DB_USER"
echo "Domain HTTPS: https://$DOMAIN"
